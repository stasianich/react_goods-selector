{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","showSelected","selectedGoodsList","length","firstPart","i","lastPart","addGoodToList","good","setState","removeGoodFromList","filter","currentGood","clearGoodsList","showButton","text","isGoodSelected","action","type","className","classNames","onClick","invisible","this","map","isSelectedGood","some","selectedGood","key","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQAKMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmKaC,E,4MA/JbC,MAAQ,CACNC,cAAe,CAAC,W,EAGlBC,aAAe,SAACD,GACd,IAAIE,EAAoB,oBAExB,GAAIF,EAAcG,OAAS,EAAG,CAG5B,IAFA,IAAIC,EAAY,GAEPC,EAAI,EAAGA,EAAIL,EAAcG,OAAS,EAAGE,GAAK,EACjDD,GAAaJ,EAAcK,GACvBA,EAAIL,EAAcG,OAAS,IAC7BC,GAAa,MAIjB,IAAME,EAAQ,eAAWN,EAAcA,EAAcG,OAAS,IAE9DD,EAAiB,UAAME,EAAYE,EAAlB,sBACiB,IAAzBN,EAAcG,SACvBD,EAAiB,UAAMF,EAAN,iBAGnB,OACE,oCACGE,I,EAKPK,cAAgB,SAACC,GACf,EAAKC,UAAS,gBAAGT,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBQ,S,EAItCE,mBAAqB,SAACF,GACpB,EAAKC,UAAS,kBAAwB,CACpCT,cADY,EAAGA,cACcW,QAAO,SAAAC,GAAW,OAC7CA,IAAgBJ,U,EAKtBK,eAAiB,WACf,EAAKJ,SAAS,CACZT,cAAe,M,EAInBc,WAAa,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,eAAgBC,EAAzB,EAAyBA,OAAQT,EAAjC,EAAiCA,KAAjC,OACX,4BACEU,KAAK,SACLC,UACMC,IACE,eACA,MACA,kBAAmB,CACjB,kBAAmBJ,EACnB,cAA0B,QAAXC,EACf,aAAyB,WAAXA,IAIxBI,QAAS,WACQ,QAAXJ,EACF,EAAKV,cAAcC,GACC,WAAXS,GACT,EAAKP,mBAAmBF,KAI3BO,I,4CAIL,WAAU,IAAD,OACP,OACE,yBAAKI,UAAU,OACb,wBAAIA,UAAU,uEAOZ,4BACED,KAAK,SACLC,UACEC,IACE,uBACA,YACA,CAAEE,UAAWC,KAAKxB,MAAMC,cAAcG,OAAS,IAGnDkB,QAASE,KAAKV,iBAEhB,0BAAMM,UAAU,8BAAhB,iBAEG,IACAI,KAAKtB,aAAasB,KAAKxB,MAAMC,iBAGlC,wBAAImB,UAAU,qEAQXtB,EAAgB2B,KAAI,SAAChB,GACpB,IAAMiB,EAAiB,EAAK1B,MAAMC,cAAc0B,MAC9C,SAAAC,GAAY,OAAKA,IAAiBnB,KAGpC,OACE,wBACEW,UAAU,2CACVS,IAAKC,eAEL,0BAAMV,UACAC,IACE,aACA,MACA,QACA,cACA,SACA,cACA,UACA,CAAE,yBAA0BK,KAIjCjB,GAEF,EAAKM,WAAW,CACfC,KAAM,cACNC,eAAgBS,EAChBR,OAAQ,MACRT,SAGD,EAAKM,WAAW,CACfC,KAAM,mBACNC,gBAAiBS,EACjBR,OAAQ,SACRT,mB,GArJAsB,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.b01ae242.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: ['Carrot'],\n  };\n\n  showSelected = (selectedGoods) => {\n    let selectedGoodsList = 'No goods selected';\n\n    if (selectedGoods.length > 1) {\n      let firstPart = '';\n\n      for (let i = 0; i < selectedGoods.length - 1; i += 1) {\n        firstPart += selectedGoods[i];\n        if (i < selectedGoods.length - 2) {\n          firstPart += ', ';\n        }\n      }\n\n      const lastPart = ` and ${selectedGoods[selectedGoods.length - 1]}`;\n\n      selectedGoodsList = `${firstPart + lastPart} are selected`;\n    } else if (selectedGoods.length === 1) {\n      selectedGoodsList = `${selectedGoods} is selected`;\n    }\n\n    return (\n      <>\n        {selectedGoodsList}\n      </>\n    );\n  };\n\n  addGoodToList = (good) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, good],\n    }));\n  };\n\n  removeGoodFromList = (good) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(currentGood => (\n        currentGood !== good\n      )),\n    }));\n  };\n\n  clearGoodsList = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  showButton = ({ text, isGoodSelected, action, good }) => (\n    <button\n      type=\"button\"\n      className={\n            classNames(\n              'good__button',\n              'col',\n              'btn bg-gradient', {\n                'visually-hidden': isGoodSelected,\n                'btn-primary': action === 'add',\n                'btn-danger': action === 'delete',\n              },\n            )\n          }\n      onClick={() => {\n        if (action === 'add') {\n          this.addGoodToList(good);\n        } else if (action === 'delete') {\n          this.removeGoodFromList(good);\n        }\n      }}\n    >\n      {text}\n    </button>\n  )\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"\n          title\n          d-flex\n          flex-column\n          justify-content-center\n          align-items-center\"\n        >\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'title__delete-button',\n                'btn-close',\n                { invisible: this.state.selectedGoods.length < 1 },\n              )\n            }\n            onClick={this.clearGoodsList}\n          />\n          <span className=\"title__selected-goods w-75\">\n            Selected good:\n            {' '}\n            {this.showSelected(this.state.selectedGoods)}\n          </span>\n        </h1>\n        <ol className=\"\n            goods-list\n            d-flex\n            flex-column\n            align-items-center\n            gap-1\n            container\"\n        >\n          {goodsFromServer.map((good) => {\n            const isSelectedGood = this.state.selectedGoods.some(\n              selectedGood => (selectedGood === good),\n            );\n\n            return (\n              <li\n                className=\"good row w-50 align-items-baseline gap-3\"\n                key={uuidv4()}\n              >\n                <span className={\n                      classNames(\n                        'good__name',\n                        'col',\n                        'lh-lg',\n                        'text-center',\n                        'border',\n                        'border-dark',\n                        'rounded',\n                        { 'bg-success bg-gradient': isSelectedGood },\n                      )\n                    }\n                >\n                  {good}\n                </span>\n                {this.showButton({\n                  text: 'Add to list',\n                  isGoodSelected: isSelectedGood,\n                  action: 'add',\n                  good,\n                })}\n\n                {this.showButton({\n                  text: 'Delete from list',\n                  isGoodSelected: !isSelectedGood,\n                  action: 'delete',\n                  good,\n                })}\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}