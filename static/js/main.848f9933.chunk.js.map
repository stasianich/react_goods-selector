{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","showSelected","output","length","firstPart","i","lastPart","addGood","good","setState","removeGood","filter","currentGood","clearGoodsList","className","type","classNames","invisible","this","onClick","map","isSelectedGood","includes","key","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQAKMA,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwIaC,E,4MApIbC,MAAQ,CACNC,cAAe,I,EAGjBC,aAAe,SAACD,GACd,IAAIE,EAAS,oBAEb,GAAIF,EAAcG,OAAS,EAAG,CAG5B,IAFA,IAAIC,EAAY,GAEPC,EAAI,EAAGA,EAAIL,EAAcG,OAAS,EAAGE,GAAK,EACjDD,GAAaJ,EAAcK,GACvBA,EAAIL,EAAcG,OAAS,IAC7BC,GAAa,MAIjB,IAAME,EAAQ,eAAWN,EAAcA,EAAcG,OAAS,IAE9DD,EAAM,UAAME,EAAYE,EAAlB,sBAC4B,IAAzBN,EAAcG,SACvBD,EAAM,UAAMF,EAAN,iBAGR,OAAOE,G,EAGTK,QAAU,SAACC,GACT,EAAKC,UAAS,gBAAGT,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBQ,S,EAItCE,WAAa,SAACF,GACZ,EAAKC,UAAS,kBAAwB,CACpCT,cADY,EAAGA,cACcW,QAAO,SAAAC,GAAW,OAC7CA,IAAgBJ,U,EAKtBK,eAAiB,WACf,EAAKJ,SAAS,CACZT,cAAe,M,4CAInB,WAAU,IAAD,OACP,OACE,yBAAKc,UAAU,OACb,wBAAIA,UAAU,uEAOZ,4BACEC,KAAK,SACLD,UACEE,IACE,uBACA,YACA,CAAEC,UAAWC,KAAKnB,MAAMC,cAAcG,OAAS,IAGnDgB,QAASD,KAAKL,iBAEhB,0BAAMC,UAAU,8BAAhB,yBACqBI,KAAKjB,aAAaiB,KAAKnB,MAAMC,kBAGpD,wBAAIc,UAAU,qEAQXjB,EAAgBuB,KAAI,SAACZ,GACpB,IAAMa,EAAiB,EAAKtB,MAAMC,cAAcsB,SAASd,GAEzD,OACE,wBACEM,UAAU,2CACVS,IAAKC,eAEL,0BAAMV,UACAE,IACE,aACA,MACA,QACA,cACA,SACA,cACA,UACA,CAAE,yBAA0BK,KAIjCb,GAEH,4BACEO,KAAK,SACLD,UACME,IACE,eACA,MACA,kBAAmB,CACjB,eAAgBK,EAChB,aAAcA,IAIxBF,QAAS,kBACNE,EAEG,EAAKX,WAAWF,GADhB,EAAKD,QAAQC,KAIjBa,EAAiC,mBAAhB,yB,GA1HnBI,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.848f9933.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  };\n\n  showSelected = (selectedGoods) => {\n    let output = 'No goods selected';\n\n    if (selectedGoods.length > 1) {\n      let firstPart = '';\n\n      for (let i = 0; i < selectedGoods.length - 1; i += 1) {\n        firstPart += selectedGoods[i];\n        if (i < selectedGoods.length - 2) {\n          firstPart += ', ';\n        }\n      }\n\n      const lastPart = ` and ${selectedGoods[selectedGoods.length - 1]}`;\n\n      output = `${firstPart + lastPart} are selected`;\n    } else if (selectedGoods.length === 1) {\n      output = `${selectedGoods} is selected`;\n    }\n\n    return output;\n  };\n\n  addGood = (good) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, good],\n    }));\n  };\n\n  removeGood = (good) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(currentGood => (\n        currentGood !== good\n      )),\n    }));\n  };\n\n  clearGoodsList = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"\n          title\n          d-flex\n          flex-column\n          justify-content-center\n          align-items-center\"\n        >\n          <button\n            type=\"button\"\n            className={\n              classNames(\n                'title__delete-button',\n                'btn-close',\n                { invisible: this.state.selectedGoods.length < 1 },\n              )\n            }\n            onClick={this.clearGoodsList}\n          />\n          <span className=\"title__selected-goods w-75\">\n            {`Selected good: ${this.showSelected(this.state.selectedGoods)}`}\n          </span>\n        </h1>\n        <ol className=\"\n            goods-list\n            d-flex\n            flex-column\n            align-items-center\n            gap-1\n            container\"\n        >\n          {goodsFromServer.map((good) => {\n            const isSelectedGood = this.state.selectedGoods.includes(good);\n\n            return (\n              <li\n                className=\"good row w-50 align-items-baseline gap-3\"\n                key={uuidv4()}\n              >\n                <span className={\n                      classNames(\n                        'good__name',\n                        'col',\n                        'lh-lg',\n                        'text-center',\n                        'border',\n                        'border-dark',\n                        'rounded',\n                        { 'bg-success bg-gradient': isSelectedGood },\n                      )\n                    }\n                >\n                  {good}\n                </span>\n                <button\n                  type=\"button\"\n                  className={\n                        classNames(\n                          'good__button',\n                          'col',\n                          'btn bg-gradient', {\n                            'btn-primary': !isSelectedGood,\n                            'btn-danger': isSelectedGood,\n                          },\n                        )\n                      }\n                  onClick={() => (\n                    !isSelectedGood\n                      ? this.addGood(good)\n                      : this.removeGood(good)\n                  )}\n                >\n                  {!isSelectedGood ? 'Add to list' : 'Remove from list' }\n                </button>\n              </li>\n            );\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}